(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[613],{5418:function(e,t,n){Promise.resolve().then(n.bind(n,9360))},9360:function(e,t,n){"use strict";n.r(t),n.d(t,{default:function(){return Home}});var a=n(7437),r=n(3283);let o=new Map([[r.G.Normal,"通常モード"]]);var i=n(4666),s=n(9823),l=n(2797),c=n(1396),u=n.n(c),y=n(2265);function Home(){let[e,t]=(0,y.useState)(void 0);if((0,y.useEffect)(()=>{let e=l.n.getNewGameMode();t(e)},[]),void 0==e)return(0,a.jsx)(a.Fragment,{children:(0,a.jsx)("p",{children:"ロード中..."})});async function beforeMoveProcess(){let[e,t]=await Promise.all([s.t.getExecAllPlayerRemove(),s.t.getExecAllEntryRemove()]);if(void 0==e){console.error("playerRemoveResult is undefined");return}if(!e){console.error("playerRemoveResult is false");return}if(void 0==t){console.error("entryRemoveResult is undefined");return}if(!t){console.error("entryRemoveResult is false");return}let n=l.n.getForPostNewGameMode(),a=await s.t.postSaveNewGame(n);if(void 0==a){console.error("saveModeResult is undefined");return}if(!a){console.error("saveModeResult is false");return}let r={gameState:i.D.PlayerJoining},o=await s.t.postChangeGameState(r);if(void 0==o){console.error("changeResult is undefined");return}o||console.error("changeResult is false")}let n=o.get(e);return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)("h1",{children:n}),(0,a.jsx)("p",{children:"募集を開始しますか？"}),(0,a.jsx)("p",{children:"（途中のゲームがある場合は上書きされます）"}),(0,a.jsxs)("ul",{children:[(0,a.jsx)("li",{children:(0,a.jsx)(u(),{href:"/gm/joining/",onClick:beforeMoveProcess,children:"はい"})}),(0,a.jsx)("li",{children:(0,a.jsx)(u(),{href:"/gm/newgame/modeselect/",children:"戻る"})})]})]})}},9080:function(e,t,n){"use strict";var a;n.d(t,{Y:function(){return a}}),(a||(a={})).Point={WebSocket:"/api/ws",GetGetGameState:"/api/get-get-game-state",PostExistsDeviceId:"/api/post-exists-device-id",PostCheckPlayerAlive:"/api/post-check-player-alive",PostSaveNewGame:"/api/post-save-new-game",PostExistsEntryDeviceId:"/api/post-exists-entry-device-id",PostCheckDuplEntryPlayerName:"/api/post-check-dupl-entry-player-name",PostPlayerTempRegist:"/api/post-player-temp-regist",PostPlayerRegist:"/api/post-player-regist",PostPlayerRegistRemove:"/api/post-player-regist-remove",GetExecAllPlayerRemove:"/api/get-exec-all-player-remove",GetExecAllEntryRemove:"/api/get-exec-all-entry-remove",GetExecEntryRegist:"/api/get-exec-entry-regist",PostChangeGameState:"/api/post-change-game-state",GetFetchAllPlayerInfo:"/api/get-fetch-all-player-info",PostSelfRoleChecked:"/api/post-self-role-checked"}},3283:function(e,t,n){"use strict";n.d(t,{G:function(){return a}});let a={Normal:"Normal"}},4666:function(e,t,n){"use strict";n.d(t,{D:function(){return a}});let a={Empty:"Empty",PreGame:"PreGame",PlayerJoining:"PlayerJoining",PlayerJoiningEnded:"PlayerJoiningEnded",PlayerListDisplay:"PlayerListDisplay",RoleAssignment:"RoleAssignment",DayPhaseStart:"DayPhaseStart",DayPhase:"DayPhase",DayPhaseEnd:"DayPhaseEnd",Voting:"Voting",VotingEnd:"VotingEnd",VoteResult:"VoteResult",ExileAnnouncement:"ExileAnnouncement",FinalExileAnnouncement:"FinalExileAnnouncement",NightPhaseStart:"NightPhaseStart",NightPhase:"NightPhase",NightPhaseEnd:"NightPhaseEnd",MorningPhaseStart:"MorningPhaseStart",NightActionResult:"NightActionResult",GameEnd:"GameEnd",FinalResult:"FinalResult",RoleReveal:"RoleReveal"}},9823:function(e,t,n){"use strict";n.d(t,{t:function(){return a}});var a,r=n(9080);let TypedFormData=class TypedFormData extends FormData{stringifyValue(e){return String(e)}constructor(e){for(let t in super(),e)e.hasOwnProperty(t)&&this.append(t,this.stringifyValue(e[t]))}};!function(e){function makeAPIEndpointURL(e){let t="http://localhost:8080";return void 0==t?"":"".concat(t).concat(e)}async function getGetGameState(){let e=makeAPIEndpointURL(r.Y.Point.GetGetGameState);if(""===e)return;let t=await fetch(e),n=await t.json();return n.gameState}async function postExistsDeviceId(e){let t=makeAPIEndpointURL(r.Y.Point.PostExistsDeviceId);if(""===t)return;let n=new TypedFormData(e),a=await fetch(t,{method:"POST",body:n}),o=await a.json();return o.exists}async function postCheckPlayerAlive(e){let t=makeAPIEndpointURL(r.Y.Point.PostCheckPlayerAlive);if(""===t)return;let n=new TypedFormData(e),a=await fetch(t,{method:"POST",body:n}),o=await a.json();return o.aliveStatus}async function postSaveNewGame(e){let t=makeAPIEndpointURL(r.Y.Point.PostSaveNewGame);if(""===t)return;let n=new TypedFormData(e),a=await fetch(t,{method:"POST",body:n}),o=await a.json();return o.result}async function postExistsEntryDeviceId(e){let t=makeAPIEndpointURL(r.Y.Point.PostExistsEntryDeviceId);if(""===t)return;let n=new TypedFormData(e),a=await fetch(t,{method:"POST",body:n}),o=await a.json();return o.exists}async function postCheckDuplEntryPlayerName(e){let t=makeAPIEndpointURL(r.Y.Point.PostCheckDuplEntryPlayerName);if(""===t)return;let n=new TypedFormData(e),a=await fetch(t,{method:"POST",body:n});console.log(a);let o=await a.json();return console.log(o),console.log(o.existsDuplicate),o.existsDuplicate}async function postPlayerTempRegist(e){let t=makeAPIEndpointURL(r.Y.Point.PostPlayerTempRegist);if(""===t)return;let n=new TypedFormData(e),a=await fetch(t,{method:"POST",body:n}),o=await a.json();return o.result}async function postPlayerRegist(e){let t=makeAPIEndpointURL(r.Y.Point.PostPlayerRegist);if(""===t)return;let n=new TypedFormData(e),a=await fetch(t,{method:"POST",body:n}),o=await a.json();return o.result}async function postPlayerRegistRemove(e){let t=makeAPIEndpointURL(r.Y.Point.PostPlayerRegistRemove);if(""===t)return;let n=new TypedFormData(e),a=await fetch(t,{method:"POST",body:n}),o=await a.json();return o.result}async function getExecAllPlayerRemove(){let e=makeAPIEndpointURL(r.Y.Point.GetExecAllPlayerRemove);if(""===e)return;let t=await fetch(e),n=await t.json();return n.result}async function getExecAllEntryRemove(){let e=makeAPIEndpointURL(r.Y.Point.GetExecAllEntryRemove);if(""===e)return;let t=await fetch(e),n=await t.json();return n.result}async function getExecEntryRegist(){let e=makeAPIEndpointURL(r.Y.Point.GetExecEntryRegist);if(""===e)return;let t=await fetch(e),n=await t.json();return n.result}async function postChangeGameState(e){let t=makeAPIEndpointURL(r.Y.Point.PostChangeGameState);if(""===t)return;let n=new TypedFormData(e),a=await fetch(t,{method:"POST",body:n}),o=await a.json();return o.result}async function getFetchAllPlayerInfo(){let e=makeAPIEndpointURL(r.Y.Point.GetFetchAllPlayerInfo);if(""===e)return;let t=await fetch(e),n=await t.json();return n.apiAllPlayerInfo}async function postSelfRoleChecked(e){let t=makeAPIEndpointURL(r.Y.Point.PostSelfRoleChecked);if(""===t)return;let n=new TypedFormData(e),a=await fetch(t,{method:"POST",body:n}),o=await a.json();return o.result}e.getGetGameState=getGetGameState,e.postExistsDeviceId=postExistsDeviceId,e.postCheckPlayerAlive=postCheckPlayerAlive,e.postSaveNewGame=postSaveNewGame,e.postExistsEntryDeviceId=postExistsEntryDeviceId,e.postCheckDuplEntryPlayerName=postCheckDuplEntryPlayerName,e.postPlayerTempRegist=postPlayerTempRegist,e.postPlayerRegist=postPlayerRegist,e.postPlayerRegistRemove=postPlayerRegistRemove,e.getExecAllPlayerRemove=getExecAllPlayerRemove,e.getExecAllEntryRemove=getExecAllEntryRemove,e.getExecEntryRegist=getExecEntryRegist,e.postChangeGameState=postChangeGameState,e.getFetchAllPlayerInfo=getFetchAllPlayerInfo,e.postSelfRoleChecked=postSelfRoleChecked}(a||(a={}))},2797:function(e,t,n){"use strict";var a,r,o,i;n.d(t,{n:function(){return r}});let s={jrptGeneralDeviceid:"jrpt_general_deviceid",jrptNewgameMode:"jrpt_newgame_mode",jrptEntryPlayername:"jrpt_entry_playername",jrptEntryPlayericon:"jrpt_entry_playericon"};(o=a||(a={})).get=function(e){let t=localStorage.getItem(e);if(null!=t)return t},o.set=function(e,t){localStorage.setItem(e,t)},(i=r||(r={})).getDeviceId=function(){let e=a.get(s.jrptGeneralDeviceid);return e},i.setDeviceId=function(e){a.set(s.jrptGeneralDeviceid,e)},i.getNewGameMode=function(){let e=a.get(s.jrptNewgameMode);return e},i.getForPostNewGameMode=function(){let e=a.get(s.jrptNewgameMode);return{gameMode:e}},i.setNewGameMode=function(e){a.set(s.jrptNewgameMode,e)},i.getEntryPlayerName=function(){let e=a.get(s.jrptEntryPlayername);return e},i.setEntryPlayerName=function(e){a.set(s.jrptEntryPlayername,e)},i.getEntryPlayerIcon=function(){let e=a.get(s.jrptEntryPlayericon);return e},i.setEntryPlayerIcon=function(e){a.set(s.jrptEntryPlayericon,e)}}},function(e){e.O(0,[176,971,864,744],function(){return e(e.s=5418)}),_N_E=e.O()}]);